source_dir = "src/swift"
file_extension = "swift"
swift_subdir = true

[condition.depth]
appconfig_depthfmt = ",\n\t\tcreateDepthBuffer: $depth_format"
depth_info_ref = "&depthInfo"
lesson_struct_depth = """

		var depthInfo = SDL_GPUDepthStencilTargetInfo()
		depthInfo.texture          = ctx.depthTexture
		depthInfo.clear_depth      = 1.0
		depthInfo.load_op          = SDL_GPU_LOADOP_CLEAR
		depthInfo.store_op         = SDL_GPU_STOREOP_DONT_CARE
		depthInfo.stencil_load_op  = SDL_GPU_LOADOP_DONT_CARE
		depthInfo.stencil_store_op = SDL_GPU_STOREOP_DONT_CARE
		depthInfo.cycle            = true
"""

[condition.-depth]
depth_info_ref = "nil"

[condition.projection]
swift_import_simd = "import simd\n"
lesson_definitions = """

	var projection: simd_float4x4 = .identity
"""
lesson_func_resize = """

	mutating func resize(size: Size<Int32>)
	{
		let aspect = Float(size.width) / Float(max(1, size.height))
		self.projection = .perspective(fovy: 45, aspect: aspect, near: 0.1, far: 100)
	}
"""

[condition.key]
lesson_func_key = """


	func key(ctx: inout NeHeContext, key: SDL_Keycode, down: Bool, repeat: Bool)
	{
		guard down && !`repeat` else { return }
		switch key
		{
		default:
			break
		}
	}"""
